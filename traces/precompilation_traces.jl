precompile(Tuple{CooperativeTasks.var"##SingleExecution#32", Bool, Type{CooperativeTasks.SingleExecution}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:start_threadid,), Tuple{Int64}}, Type{CooperativeTasks.SpawnOptions}})
precompile(Tuple{typeof(CooperativeTasks.spawn), Function, CooperativeTasks.SpawnOptions})
precompile(Tuple{Type{CooperativeTasks.ConcurrencyError}, CooperativeTasks.StatusCode})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{CooperativeTasks.Message{T} where T, CooperativeTasks.ConcurrencyError}}, CooperativeTasks.ConcurrencyError})
precompile(Tuple{typeof(Base.convert), Type{CooperativeTasks.Command}, CooperativeTasks.Command})
precompile(Tuple{typeof(CooperativeTasks.reset_mpi_state)})
precompile(Tuple{CooperativeTasks.var"#30#31"{Array{CooperativeTasks.Condition, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CooperativeTasks.Condition, Symbol, Bool})
precompile(Tuple{typeof(Base.get!), Type{Dictionaries.Dictionary{Base.UUID, CooperativeTasks.Message{T} where T}}, Base.IdDict{Any, Any}, Any})
precompile(Tuple{typeof(Base.get!), Type{Dictionaries.Dictionary{Task, CooperativeTasks.Connection}}, Base.IdDict{Any, Any}, Any})
precompile(Tuple{typeof(Base.get!), Type{Dictionaries.Dictionary{Task, CooperativeTasks.TaskState}}, Base.IdDict{Any, Any}, Any})
precompile(Tuple{typeof(CooperativeTasks.execution_mode), Symbol})
precompile(Tuple{Type{NamedTuple{(:execution_mode,), T} where T<:Tuple}, Tuple{CooperativeTasks.SingleExecution}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:execution_mode,), Tuple{CooperativeTasks.SingleExecution}}, Type{CooperativeTasks.SpawnOptions}})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##230.var"#9#14"}})
precompile(Tuple{typeof(Base.put!), Base.Channel{CooperativeTasks.Message{T} where T}, CooperativeTasks.Message{CooperativeTasks.Command}})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{CooperativeTasks.Message{T} where T, CooperativeTasks.ConcurrencyError}}, CooperativeTasks.Message{CooperativeTasks.Command}})
precompile(Tuple{typeof(ResultTypes.unwrap), ResultTypes.Result{CooperativeTasks.Message{T} where T, CooperativeTasks.ConcurrencyError}})
precompile(Tuple{typeof(CooperativeTasks.set_task_state), Task, CooperativeTasks.TaskState})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, CooperativeTasks.TaskState})
precompile(Tuple{typeof(CooperativeTasks.handle_error), CooperativeTasks.PropagatedTaskError})
precompile(Tuple{typeof(CooperativeTasks.istasksuccessful), Task})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##230.var"#10#15"}})
precompile(Tuple{Type{CooperativeTasks.LoopExecution}, Float64})
precompile(Tuple{Type{NamedTuple{(:start_threadid, :allow_task_migration, :execution_mode), T} where T<:Tuple}, Tuple{Int64, Bool, CooperativeTasks.LoopExecution}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:start_threadid, :allow_task_migration, :execution_mode), Tuple{Int64, Bool, CooperativeTasks.LoopExecution}}, Type{CooperativeTasks.SpawnOptions}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#11#16"}})
precompile(Tuple{CooperativeTasks.var"#15#16", CooperativeTasks.Future})
precompile(Tuple{typeof(CooperativeTasks.shutdown_children)})
precompile(Tuple{typeof(Base.wait), CooperativeTasks.Condition})
precompile(Tuple{typeof(CooperativeTasks.schedule_shutdown)})
precompile(Tuple{CooperativeTasks.var"#6#7"{Task}})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, Bool})
precompile(Tuple{typeof(Base.put!), Base.Channel{CooperativeTasks.Message{T} where T}, CooperativeTasks.Message{CooperativeTasks.ReturnedValue}})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{CooperativeTasks.Message{T} where T, CooperativeTasks.ConcurrencyError}}, CooperativeTasks.Message{CooperativeTasks.ReturnedValue}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##230.var"#13#18"{Int64}}})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##231.var"#9#13"}})
precompile(Tuple{Type{CooperativeTasks.LoopExecution}, Nothing})
precompile(Tuple{typeof(CooperativeTasks.execution_mode), CooperativeTasks.LoopExecution})
precompile(Tuple{Type{NamedTuple{(:execution_mode,), T} where T<:Tuple}, Tuple{CooperativeTasks.LoopExecution}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:execution_mode,), Tuple{CooperativeTasks.LoopExecution}}, Type{CooperativeTasks.SpawnOptions}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##231.var"#10#14"}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##231.var"#11#15"}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##231.var"#12#16"}})
precompile(Tuple{typeof(CooperativeTasks.execute), Function, Task})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##232.var"#9#23"}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:timeout,), Tuple{Int64}}, typeof(CooperativeTasks.tryfetch), CooperativeTasks.Future})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, Int64})
precompile(Tuple{CooperativeTasks.var"#23#24"{CooperativeTasks.Future, Dictionaries.Dictionary{Base.UUID, Any}}})
precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Any}, ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}})
precompile(Tuple{typeof(ResultTypes.iserror), ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}})
precompile(Tuple{typeof(ResultTypes.unwrap), ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}})
precompile(Tuple{typeof(CooperativeTasks.execute), Function, Task, Vararg{Any}})
precompile(Tuple{CooperativeTasks.var"##execute#14", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(CooperativeTasks.execute), Function, Vararg{Any}})
precompile(Tuple{typeof(CooperativeTasks.tryexecute), Function, Task, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:timeout,), Tuple{Int64}}, typeof(Base.fetch), CooperativeTasks.Future})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:continuation,), Tuple{Nothing}}, typeof(CooperativeTasks.execute), Function, Task})
precompile(Tuple{typeof(ResultTypes.unwrap_error), ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}})
precompile(Tuple{typeof(Base.getproperty), CooperativeTasks.TaskError, Symbol})
precompile(Tuple{typeof(CooperativeTasks.tryexecute), Function, Task})
precompile(Tuple{typeof(ResultTypes.unwrap_error), ResultTypes.Result{CooperativeTasks.Future, CooperativeTasks.ConcurrencyError}})
precompile(Tuple{typeof(Base.:(==)), CooperativeTasks.ConcurrencyError, CooperativeTasks.ConcurrencyError})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##232.var"#12#27"}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{CooperativeTasks.Future, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{CooperativeTasks.Future, String}, Int64, Int64})
precompile(Tuple{typeof(Base.fetch), CooperativeTasks.Future})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##232.var"#14#29"}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:continuation,), Tuple{##232.var"#pingpong_continuation#30"{Task, ##232.var"#pingpong#26"}}}, typeof(CooperativeTasks.execute), Function, Task, Vararg{Any}})
precompile(Tuple{CooperativeTasks.var"##execute#14", Base.Pairs{Symbol, ##232.var"#pingpong_continuation#30"{Task, ##232.var"#pingpong#26"}, Tuple{Symbol}, NamedTuple{(:continuation,), Tuple{##232.var"#pingpong_continuation#30"{Task, ##232.var"#pingpong#26"}}}}, typeof(CooperativeTasks.execute), Function, Vararg{Any}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:continuation,), Tuple{##232.var"#pingpong_continuation#30"{Task, ##232.var"#pingpong#26"}}}, typeof(CooperativeTasks.tryexecute), Function, Task, Int64})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, CooperativeTasks.Future})
precompile(Tuple{##232.var"#pingpong_continuation#30"{Task, ##232.var"#pingpong#26"}, ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}})
precompile(Tuple{typeof(ResultTypes.iserror), CooperativeTasks.Future})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##232.var"#17#33"}})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##232.var"#18#34"}})
precompile(Tuple{typeof(Base.sprint), Function, CooperativeTasks.PropagatedTaskError})
precompile(Tuple{typeof(Base.showerror), Base.GenericIOBuffer{Array{UInt8, 1}}, CooperativeTasks.PropagatedTaskError})
precompile(Tuple{typeof(Base.showerror), Base.GenericIOBuffer{Array{UInt8, 1}}, CooperativeTasks.ConcurrencyError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##232.var"#20#36"}})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##232.var"#21#37"}})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, Nothing})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##233.var"#9#19"{Base.RefValue{Task}, Base.RefValue{Task}}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##233.var"#10#20"}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##233.var"#11#21"}})
precompile(Tuple{typeof(CooperativeTasks.task_states)})
precompile(Tuple{typeof(Base.convert), Type{ResultTypes.Result{Any, Union{CooperativeTasks.ConcurrencyError, CooperativeTasks.TaskError}}}, Dictionaries.Dictionary{Task, CooperativeTasks.TaskState}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Task, CooperativeTasks.TaskState})
precompile(Tuple{typeof(Base.vect), Pair{Task, CooperativeTasks.TaskState}, Vararg{Pair{Task, CooperativeTasks.TaskState}}})
precompile(Tuple{typeof(Dictionaries.dictionary), Array{Pair{Task, CooperativeTasks.TaskState}, 1}})
precompile(Tuple{typeof(Base.:(==)), Dictionaries.Dictionary{Task, CooperativeTasks.TaskState}, Dictionaries.Dictionary{Task, CooperativeTasks.TaskState}})
precompile(Tuple{typeof(CooperativeTasks.tryexecute), Function, Task, Task, Vararg{Any}})
precompile(Tuple{CooperativeTasks.var"##tryexecute#12", Bool, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(CooperativeTasks.tryexecute), Function, Task, Task, Vararg{Any}})
precompile(Tuple{Type{CooperativeTasks.Command}, Function, Task, Vararg{Any}})
precompile(Tuple{CooperativeTasks.var"#_#10#11", Nothing, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{CooperativeTasks.Command}, Function, Task, Vararg{Any}})
precompile(Tuple{typeof(Base.:(==)), CooperativeTasks.TaskState, CooperativeTasks.TaskState})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##233.var"#12#22"{Base.RefValue{Task}, Base.RefValue{Task}}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##233.var"#13#23"}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##233.var"#14#24"}})
precompile(Tuple{typeof(Base.getproperty), CooperativeTasks.SpawnOptions, Symbol})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##233.var"#16#26"{Base.RefValue{Task}, Base.RefValue{Task}}}})
precompile(Tuple{CooperativeTasks.var"#_exec#35"{CooperativeTasks.LoopExecution, ##233.var"#18#28"}})
precompile(Tuple{CooperativeTasks.var"#_exec#33"{##233.var"#17#27"}})
precompile(Tuple{Base.Fix1{typeof(Base.showerror), Base.IOStream}, CooperativeTasks.PropagatedTaskError})
